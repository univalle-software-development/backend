name: CI/CD Pipeline for Sonar Cloud Backend Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  packages: write  # Allow write access to packages
  contents: read      

jobs:
  integration:
    name: Integration Stage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout to main branch
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17' # Specify the Java version you want to use  
          distribution: 'corretto' # See 'Supported distributions' for available options

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install npm dependencies
        run: npm install
        
      - name: Test and coverage
        run: npm run test:coverage

      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.BACKEND_SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.organization=univalle-software-development \
            -Dsonar.projectKey=univalle-software-development_backend \
            -Dsonar.sources=./src \
            -Dsonar.exclusions=**/node_modules/**,./src/db.js  \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.javascript.node.maxspace=4096 \
            -Dsonar.tests=./tests \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.genericCoverageReportPaths=coverage/coverage-final.json

  delivery:
    name: Delivery Stage
    runs-on: ubuntu-latest
    needs: integration  # This job depends on the integration job
    steps:
      - name: Checkout to main branch
        uses: actions/checkout@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHRC_TOKEN }}
          logout: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push to GitHub Package
        uses: opspresso/action-docker@master
        with:
          args: --docker
        env:
          PASSWORD: ${{ secrets.GHRC_TOKEN }}
          REGISTRY: "docker.pkg.github.com"
          IMAGE_NAME: my-app-backend-canary
          LATEST: false

  deployment:
    name: Deployment Stage
    runs-on: ubuntu-latest
    needs: delivery  # This job depends on the delivery job
    steps:
      - name: Checkout to main branch
        uses: actions/checkout@v3
        
      - name: Install oc
        uses: redhat-actions/oc-installer@v1
        with:
          oc_version: '4.6'

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        env:
          OPENSHIFT_USER: ${{ vars.OPENSHIFT_USER }}
          OPENSHIFT_NAMESPACE: ${{ vars.OPENSHIFT_NAMESPACE }}
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}

      - name: Deploying in the cluster to OpenShift
        run: oc apply -f Deployment.yaml
